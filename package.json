{
  "name": "blocksy-child-blaze-commerce",
  "version": "1.0.0",
  "description": "A WordPress child theme for Blocksy by BlazeCommerce with comprehensive quality standards and Git workflow integration",
  "main": "functions.php",
  "scripts": {
    "prepare": "husky install",
    "lint": "npm run lint:php && npm run lint:js && npm run lint:css",
    "lint:php": "vendor/bin/phpcs --standard=WordPress --extensions=php .",
    "lint:js": "eslint assets/js/**/*.js",
    "lint:css": "stylelint assets/css/**/*.css",
    "format": "npm run format:php && npm run format:js && npm run format:css",
    "format:php": "vendor/bin/phpcbf --standard=WordPress --extensions=php .",
    "format:js": "prettier --write assets/js/**/*.js",
    "format:css": "prettier --write assets/css/**/*.css",
    "test": "npm run test:php && npm run test:js && npm run test:e2e",
    "test:php": "vendor/bin/phpunit",
    "test:database": "vendor/bin/phpunit --configuration phpunit-database.xml",
    "test:js": "jest",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:visual": "playwright test --grep='@visual'",
    "test:performance": "playwright test --grep='@performance'",
    "test:api": "playwright test --grep='@api'",
    "test:integration": "playwright test --config=tests/integration/playwright.config.js",
    "test:api:rest": "jest --config tests/api/jest.config.js",
    "test:api:rest:watch": "jest --config tests/api/jest.config.js --watch",
    "test:api:rest:coverage": "jest --config tests/api/jest.config.js --coverage",
    "api:generate-keys": "node scripts/generate-api-keys.js",
    "api:test-credentials": "node scripts/generate-api-keys.js",
    "security:scan": "npm run security:php && npm run security:js && npm run security:test",
    "security:php": "vendor/bin/psalm --show-info=false",
    "security:js": "npm audit --audit-level=moderate",
    "security:secrets": "gitleaks detect --source . --verbose",
    "security:test": "jest --config tests/security/jest.config.js",
    "security:baseline": "node -e \"const SecurityBaseline = require('./tests/security/SecurityBaseline'); new SecurityBaseline(process.env.API_BASE_URL || 'https://example.com').establishBaseline().then(console.log)\"",
    "build": "npm run lint && npm run test && npm run security:scan",
    "coverage": "jest --coverage && vendor/bin/phpunit --coverage-html coverage/php",
    "coverage:visual": "playwright test --grep='@visual' --reporter=html",
    "performance:audit": "playwright test --grep='@performance' --reporter=json",
    "performance:lighthouse": "lighthouse-ci autorun",
    "performance:artillery": "artillery run tests/performance/artillery-config.yml",
    "performance:k6": "k6 run tests/performance/k6-load-test.js",
    "performance:baseline": "node -e \"const PerformanceMonitor = require('./tests/performance/PerformanceMonitor'); new PerformanceMonitor(process.env.API_BASE_URL || 'https://example.com').establishBaseline().then(console.log)\"",
    "performance:compare": "node -e \"const PerformanceMonitor = require('./tests/performance/PerformanceMonitor'); new PerformanceMonitor(process.env.API_BASE_URL || 'https://example.com').compareToBaseline().then(console.log)\"",
    "quality:check": "npm run lint && npm run test && npm run security:scan && npm run coverage",
    "quality:staged": "lint-staged",
    "quality:pre-commit": "node scripts/pre-commit-quality-check.js",
    "quality:commit-msg": "node scripts/commit-msg-validator.js",
    "quality:pre-push": "node scripts/pre-push-quality-check.js",
    "quality:post-merge": "node scripts/post-merge-cleanup.js",
    "branch:validate": "node scripts/branch-naming-validator.js",
    "branch:validate-current": "node scripts/branch-naming-validator.js current",
    "branch:validate-all": "node scripts/branch-naming-validator.js all",
    "branch:help": "node scripts/branch-naming-validator.js help",
    "branch:config": "node scripts/branch-naming-validator.js config",
    "docs:enforce": "node scripts/documentation-enforcer.js",
    "docs:generate": "node scripts/documentation-enforcer.js generate",
    "docs:validate": "node scripts/documentation-enforcer.js validate",
    "docs:config": "node scripts/documentation-enforcer.js config",
    "docs:organize": "node scripts/organize-docs.js",
    "docs:organize:dry-run": "node scripts/organize-docs.js --dry-run",
    "docs:organize:help": "node scripts/organize-docs.js --help",
    "husky:install": "husky install && npm run husky:setup",
    "husky:setup": "npm run husky:pre-commit && npm run husky:commit-msg && npm run husky:pre-push && npm run husky:post-merge",
    "husky:pre-commit": "husky add .husky/pre-commit 'npm run quality:pre-commit'",
    "husky:commit-msg": "husky add .husky/commit-msg 'npm run quality:commit-msg'",
    "husky:pre-push": "husky add .husky/pre-push 'npm run quality:pre-push'",
    "husky:post-merge": "husky add .husky/post-merge 'npm run quality:post-merge'",
    "release": "bash scripts/create-production-release.sh",
    "release:version": "bash scripts/create-production-release.sh",
    "release:skip-build": "bash scripts/create-production-release.sh --skip-build",
    "release:test": "bash scripts/create-production-release.sh --skip-build --output-dir test-releases",
    "release:clean": "rm -rf releases/ test-releases/",
    "release:validate": "npm run build && npm run release:test",
    "release:test-exclusions": "bash scripts/test-release-exclusions.sh"
  },
  "lint-staged": {
    "*.php": [
      "vendor/bin/phpcs --standard=WordPress",
      "vendor/bin/psalm --show-info=false"
    ],
    "*.js": [
      "eslint --fix",
      "prettier --write",
      "jest --findRelatedTests --passWithNoTests"
    ],
    "*.css": [
      "stylelint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run quality:pre-commit",
      "commit-msg": "npm run quality:commit-msg",
      "pre-push": "npm run quality:pre-push",
      "post-merge": "npm run quality:post-merge"
    }
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@commitlint/cli": "^18.6.1",
    "@commitlint/config-conventional": "^18.6.2",
    "@lhci/cli": "^0.15.1",
    "@playwright/test": "^1.55.0",
    "@wordpress/eslint-plugin": "^22.15.0",
    "artillery": "^2.0.24",
    "axe-core": "^4.10.3",
    "axios": "^1.11.0",
    "chalk": "^4.1.2",
    "eslint": "^8.57.0",
    "eslint-config-wordpress": "^2.0.0",
    "eslint-plugin-wordpress": "^0.1.0",
    "express-rate-limit": "^8.0.1",
    "fs-extra": "^11.2.0",
    "glob": "^10.3.10",
    "helmet": "^8.1.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-environment-node": "^30.1.1",
    "jest-junit": "^16.0.0",
    "k6": "^0.0.0",
    "lighthouse": "^12.8.1",
    "lint-staged": "^15.2.0",
    "pixelmatch": "^7.1.0",
    "playwright": "^1.55.0",
    "prettier": "^3.2.5",
    "semver": "^7.6.0",
    "stylelint": "^16.2.1",
    "stylelint-config-standard": "^39.0.0",
    "stylelint-config-wordpress": "^17.0.0",
    "supertest": "^7.1.4"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/blaze-commerce/blaze-blocksy.git"
  },
  "keywords": [
    "wordpress",
    "theme",
    "blocksy",
    "child-theme",
    "blaze-commerce",
    "woocommerce",
    "quality-standards",
    "git-hooks"
  ],
  "author": "BlazeCommerce",
  "license": "GPL-2.0-or-later",
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead"
  ]
}
