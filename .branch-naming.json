{
  "patterns": {
    "feature": {
      "regex": "^feature\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "Feature branches for new functionality",
      "examples": [
        "feature/user-authentication",
        "feature/PROJ-123-user-auth",
        "feature/auth/oauth-integration",
        "feature/checkout/express-payment",
        "feature/api/user-management"
      ],
      "ticketFormat": "feature/{ticket-id}-{description}",
      "simpleFormat": "feature/{description}"
    },
    "bugfix": {
      "regex": "^(bugfix|fix)\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "Bug fix branches for resolving issues",
      "examples": [
        "bugfix/login-error",
        "fix/PROJ-456-cart-calculation",
        "bugfix/checkout/payment-validation",
        "fix/api/response-timeout",
        "bugfix/ui/mobile-layout"
      ],
      "ticketFormat": "bugfix/{ticket-id}-{description}",
      "simpleFormat": "bugfix/{description}"
    },
    "hotfix": {
      "regex": "^hotfix\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "Critical hotfix branches for production issues",
      "examples": [
        "hotfix/security-patch",
        "hotfix/PROJ-789-critical-bug",
        "hotfix/prod/database-connection",
        "hotfix/payment/gateway-timeout",
        "hotfix/auth/session-expiry"
      ],
      "ticketFormat": "hotfix/{ticket-id}-{description}",
      "simpleFormat": "hotfix/{description}"
    },
    "release": {
      "regex": "^release\/\\d+\\.\\d+\\.\\d+(-[a-z0-9-]+)?$",
      "description": "Release preparation branches",
      "examples": [
        "release/1.2.0",
        "release/2.0.0-beta",
        "release/1.5.3-rc1",
        "release/3.1.0-alpha",
        "release/2.4.1-hotfix"
      ],
      "format": "release/{major}.{minor}.{patch}[-{pre-release}]"
    },
    "chore": {
      "regex": "^chore\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "Maintenance and chore branches",
      "examples": [
        "chore/update-dependencies",
        "chore/PROJ-101-cleanup",
        "chore/docs/update-readme",
        "chore/ci/improve-pipeline",
        "chore/config/environment-setup"
      ],
      "ticketFormat": "chore/{ticket-id}-{description}",
      "simpleFormat": "chore/{description}"
    },
    "docs": {
      "regex": "^docs\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "Documentation-only branches",
      "examples": [
        "docs/api-documentation",
        "docs/PROJ-202-user-guide",
        "docs/setup/installation-guide",
        "docs/contributing/code-standards",
        "docs/deployment/production-guide"
      ],
      "ticketFormat": "docs/{ticket-id}-{description}",
      "simpleFormat": "docs/{description}"
    },
    "test": {
      "regex": "^test\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "Testing-focused branches",
      "examples": [
        "test/unit-tests",
        "test/PROJ-303-integration",
        "test/e2e/checkout-flow",
        "test/performance/load-testing",
        "test/security/penetration-testing"
      ],
      "ticketFormat": "test/{ticket-id}-{description}",
      "simpleFormat": "test/{description}"
    },
    "refactor": {
      "regex": "^refactor\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "Code refactoring branches",
      "examples": [
        "refactor/user-service",
        "refactor/PROJ-404-auth-module",
        "refactor/api/response-format",
        "refactor/database/query-optimization",
        "refactor/frontend/component-structure"
      ],
      "ticketFormat": "refactor/{ticket-id}-{description}",
      "simpleFormat": "refactor/{description}"
    },
    "experiment": {
      "regex": "^experiment\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "Experimental feature branches",
      "examples": [
        "experiment/new-ui-framework",
        "experiment/PROJ-505-ai-integration",
        "experiment/performance/caching-strategy",
        "experiment/architecture/microservices",
        "experiment/tech/new-database"
      ],
      "ticketFormat": "experiment/{ticket-id}-{description}",
      "simpleFormat": "experiment/{description}"
    }
  },
  "protected": {
    "regex": "^(main|master|develop|dev|staging|production|prod)$",
    "description": "Protected branches that should not be modified directly",
    "examples": [
      "main",
      "master", 
      "develop",
      "dev",
      "staging",
      "production",
      "prod"
    ]
  },
  "customPatterns": {
    "wordpress": {
      "regex": "^(wp|wordpress)\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "WordPress-specific branches",
      "examples": [
        "wp/theme-customization",
        "wordpress/plugin-integration",
        "wp/woocommerce/checkout-flow"
      ]
    },
    "security": {
      "regex": "^security\/([a-z0-9-]+\/)?[a-z0-9-]+$",
      "description": "Security-focused branches",
      "examples": [
        "security/vulnerability-fix",
        "security/CVE-2023-1234-patch",
        "security/auth/two-factor"
      ]
    }
  },
  "validation": {
    "allowCustomPatterns": true,
    "strictMode": false,
    "requireTicketId": false,
    "maxBranchNameLength": 100,
    "minBranchNameLength": 5,
    "allowedCharacters": "a-z0-9-/",
    "forbiddenWords": ["temp", "tmp", "test123", "asdf", "qwerty"],
    "requireDescription": true
  },
  "integration": {
    "jira": {
      "enabled": false,
      "ticketPattern": "[A-Z]+-\\d+",
      "projectKeys": ["PROJ", "DEV", "BUG", "FEAT"]
    },
    "github": {
      "enabled": true,
      "issuePattern": "#\\d+",
      "requireIssueReference": false
    },
    "gitlab": {
      "enabled": false,
      "issuePattern": "#\\d+",
      "requireIssueReference": false
    }
  },
  "enforcement": {
    "preCommit": false,
    "prePush": true,
    "preReceive": false,
    "blockInvalidBranches": true,
    "warnOnly": false
  },
  "emergencyBypass": {
    "enabled": true,
    "environmentVariable": "EMERGENCY_BYPASS",
    "requireJustification": true,
    "logBypass": true
  },
  "notifications": {
    "onViolation": {
      "showSuggestions": true,
      "showExamples": true,
      "showDocumentation": true
    },
    "onSuccess": {
      "showPattern": true,
      "showBestPractices": false
    }
  }
}
