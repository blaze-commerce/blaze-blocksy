# Artillery Load Testing Configuration
# 
# Comprehensive performance testing for WordPress/WooCommerce applications
# 
# @package BlazeCommerce\Tests\Performance

config:
  target: 'https://stg-infinitytargetscom-sitebuild.kinsta.cloud'
  phases:
    # Warm-up phase
    - duration: 60
      arrivalRate: 1
      name: "Warm-up"
    
    # Ramp-up phase
    - duration: 120
      arrivalRate: 5
      rampTo: 20
      name: "Ramp-up"
    
    # Sustained load phase
    - duration: 300
      arrivalRate: 20
      name: "Sustained Load"
    
    # Peak load phase
    - duration: 120
      arrivalRate: 20
      rampTo: 50
      name: "Peak Load"
    
    # Cool-down phase
    - duration: 60
      arrivalRate: 50
      rampTo: 5
      name: "Cool-down"
  
  # Performance thresholds
  ensure:
    # Response time thresholds
    - http.response_time.p95: 2000  # 95th percentile under 2 seconds
    - http.response_time.p99: 5000  # 99th percentile under 5 seconds
    - http.response_time.median: 1000  # Median under 1 second
    
    # Error rate thresholds
    - http.codes.200: 95  # At least 95% success rate
    - http.codes.404: 0   # No 404 errors expected
    - http.codes.500: 0   # No server errors
  
  # HTTP configuration
  http:
    timeout: 30
    pool: 50
    maxSockets: 50
  
  # Variables for dynamic testing
  variables:
    productId:
      - 1
      - 2
      - 3
      - 4
      - 5
    searchTerm:
      - "target"
      - "shooting"
      - "practice"
      - "training"
      - "range"
  
  # Plugins for enhanced reporting
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
    
    # Publish metrics to console
    publish-metrics:
      - type: cloudwatch
        region: us-east-1
        enabled: false
      
      - type: statsd
        host: localhost
        port: 8125
        enabled: false

# Test scenarios
scenarios:
  # Homepage load test
  - name: "Homepage Performance"
    weight: 30
    flow:
      - get:
          url: "/"
          name: "Homepage"
          capture:
            - json: "$.title"
              as: "pageTitle"
          expect:
            - statusCode: 200
            - contentType: text/html
            - hasHeader: "content-type"
      
      - think: 2
      
      # Check for critical resources
      - get:
          url: "/wp-content/themes/blocksy-child/style.css"
          name: "Theme CSS"
          expect:
            - statusCode: 200
  
  # Product browsing scenario
  - name: "Product Browsing"
    weight: 25
    flow:
      # Visit shop page
      - get:
          url: "/shop/"
          name: "Shop Page"
          expect:
            - statusCode: 200
      
      - think: 3
      
      # Search for products
      - get:
          url: "/shop/?s={{ searchTerm }}"
          name: "Product Search"
          expect:
            - statusCode: 200
      
      - think: 2
      
      # View product details
      - get:
          url: "/product/{{ productId }}/"
          name: "Product Details"
          expect:
            - statusCode: [200, 404]  # 404 acceptable for non-existent products
  
  # WooCommerce API load test
  - name: "WooCommerce API"
    weight: 15
    flow:
      # Public API endpoints
      - get:
          url: "/wp-json/wc/v3/products"
          name: "Products API"
          headers:
            Authorization: "Basic {{ $processEnvironment.WC_API_AUTH }}"
          expect:
            - statusCode: [200, 401]  # 401 if no auth provided
      
      - think: 1
      
      - get:
          url: "/wp-json/wc/v3/products/categories"
          name: "Categories API"
          headers:
            Authorization: "Basic {{ $processEnvironment.WC_API_AUTH }}"
          expect:
            - statusCode: [200, 401]
  
  # Checkout process simulation
  - name: "Checkout Process"
    weight: 20
    flow:
      # Add to cart
      - post:
          url: "/?wc-ajax=add_to_cart"
          name: "Add to Cart"
          form:
            product_id: "{{ productId }}"
            quantity: 1
          expect:
            - statusCode: 200
      
      - think: 2
      
      # View cart
      - get:
          url: "/cart/"
          name: "View Cart"
          expect:
            - statusCode: 200
      
      - think: 3
      
      # Proceed to checkout
      - get:
          url: "/checkout/"
          name: "Checkout Page"
          expect:
            - statusCode: 200
  
  # WordPress admin simulation (if credentials available)
  - name: "Admin Performance"
    weight: 10
    flow:
      # Admin login page
      - get:
          url: "/wp-admin/"
          name: "Admin Redirect"
          expect:
            - statusCode: [200, 302]
      
      - get:
          url: "/wp-login.php"
          name: "Login Page"
          expect:
            - statusCode: 200
      
      # WordPress REST API
      - get:
          url: "/wp-json/wp/v2/posts"
          name: "Posts API"
          qs:
            per_page: 10
          expect:
            - statusCode: 200

# Before and after hooks
before:
  flow:
    - log: "Starting load test for {{ target }}"
    - log: "Test phases: Warm-up → Ramp-up → Sustained → Peak → Cool-down"

after:
  flow:
    - log: "Load test completed"
    - log: "Check performance metrics and ensure thresholds are met"
